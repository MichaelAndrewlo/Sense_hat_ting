from sense_hat import SenseHat 
from random import randint 
from time import sleep 
sense = SenseHat() 
a = 255, 0, 0 # red 
b = 0, 255, 0 # green 
c = 0, 0, 255 # blue 
d = 255, 255, 0 # yellow 
e = 183, 183, 183 # gray 
f = 0, 0, 0 # nothing/ black 
g = 255, 0, 255 # pink/ magenta 
h = 255, 153, 0 # orange 
i = 255, 255, 255 # white 
enemy_positions = [] 
x_pos = 0 
y_pos = 0 
pl_x = 0 
pl_y = 0
pl2_x = 7
pl2_y = 7
action = 0 
z = 0 
w = 0 
j = 7
k = 7
score = 0 
dead = False 
col = a
col2 = h
difficulty = 0 
score = 0 
players = 2
player = 1
traps = [] 
  
  
def ai(t): 
  global enemy_positions 
  global x_pos
  global y_pos 
  global pl_x 
  global pl_y 
  global dead 
  get_xy(t, enemy_positions) 
  org_x = x_pos 
  org_y = y_pos 
  if x_pos < pl_x: 
    x_pos += 1 
  elif x_pos > pl_x: 
    x_pos -= 1 
  elif y_pos < pl_y: 
    y_pos += 1 
  else: 
    y_pos -= 1 
  coords = str(x_pos) + str(y_pos) 
  enemy_positions.pop(t) 
  for i in enemy_positions: 
    if coords == i: 
      coords = str(org_x) + str(org_y) 
  enemy_positions.insert(t, coords)
  sense.clear() 
  
def check_pos(x1): 
  while x1 >= 8: 
    x1 -= 1 
  while x1 <= -1: 
    x1 += 1 
  return x1 
  
def get_xy(z, lists): 
  global enemy_positions 
  global x_pos 
  global y_pos 
  position = lists[z] 
  x_pos = int(position[0]) 
  y_pos = int(position[1]) 
  
def move(d, player): 
  global pl_x
  global pl_y
  global pl2_x
  global pl2_y
  global score 
  global enemy_positions 
  global x_pos 
  global y_pos 
  global z 
  global w 
  if player == 1:
    if d == "up": 
      pl_y -= 1 
    elif d == "down": 
      pl_y += 1 
    elif d == "left": 
      pl_x -= 1 
    elif d == "right": 
      pl_x += 1 
    pl_x = check_pos(pl_x) 
    pl_y = check_pos(pl_y) 
  if player == 2:
    if d == "up": 
      pl2_y -= 1 
    elif d == "down": 
      pl2_y += 1 
    elif d == "left": 
      pl2_x -= 1 
    elif d == "right": 
      pl2_x += 1 
    pl2_x = check_pos(pl2_x) 
    pl2_y = check_pos(pl2_y) 
  sense.clear() 
  
def spawn_enemies(z): 
  global pl_x 
  global pl_y 
  global enemy_positions 
  for i in range(z): 
    x = randint(0,7) 
    y = randint(0,7) 
    for i in range(len(enemy_positions)): 
      get_xy(i, enemy_positions) 
      while (x_pos == x and y_pos == y) or (x_pos == pl_x and y_pos == pl_y): 
        x = randint(0,7) 
        y = randint(0,7) 
    coords = str(x) + str(y) 
    enemy_positions.append(coords) 
  
def weapon(x, y, t): 
  global enemy_positions 
  global w 
  global z   
  global score 
  global col 
  if players == 1:
    for i in range(len(enemy_positions)): 
      get_xy(i, enemy_positions) 
      if z == x_pos and w == y_pos: 
        if t == "middle": 
          enemy_positions.pop(i) 
          score += 1 
        break
  elif players == 2:
    if z == pl2_x and w == pl2_y:
        if t == "middle": 
          winner = "player 1"
  if t == "left":
    z = x - 2
  elif t == "right": 
    z = x + 2
  else:
    z = x
  if t == "up":
    w = y - 2
  elif t == "down":
    w = y + 2   
  else:
    w = y
  w = check_pos(w)
  z = check_pos(z)
  
def weapon2(x, y, t): 
  global enemy_positions 
  global j
  global k  
  global score 
  global col 
  global players
  if players == 1:
    for i in range(len(enemy_positions)): 
      get_xy(i, enemy_positions) 
      if z == x_pos and w == y_pos: 
        if t == "middle": 
          enemy_positions.pop(i) 
          score += 1 
        break
  if players == 2:
    if j == pl_x and k == pl_y:
        if t == "middle": 
          winner = "player 2"
  if t == "left":
    j = x - 2
  elif t == "right": 
    j = x + 2
  else:
    j = x
  if t == "up":
    k = y - 2
  elif t == "down":
    k = y + 2   
  else:
    k = y
  j = check_pos(j)
  k = check_pos(k)
  
"""
def place_trap():
  

def trap():
  for i in range(len(traps)):
    get_xy(i, traps)
    trap_x = x_pos
    trap_y = y_pos
    trap = traps[i] 
    trap_time = int(trap[3])
    for x in range(len(enemy_positions)):
      get_xy(x, enemy_positions)
      if trap_time >= 3:
        if x_pos == trap_x + 1 or x_pos == trap_x - 1:
          if y_pos == trap_y + 1 or y_pos == trap_y - 1:
            trap_used = True
            enemy_positions.pop(x)
      if trap_used:
        traps.pop(i)
        trap_used = False
"""
if players == 1:
  while True:
    for i in range(len(enemy_positions)):
      get_xy(i, enemy_positions)
      if x_pos == pl_x and y_pos == pl_y:
        dead = True
    for event in sense.stick.get_events():
      if event.action == "pressed":
        move(event.direction, 1)
        weapon(pl_x, pl_y, event.direction)
    if len(enemy_positions) == 0:
      difficulty += 1
      spawn_enemies(difficulty)
      sleep(0.2)
    if action % 5 == 0:
      for i in range(len(enemy_positions)):
        ai(i)
    if dead:
      break
    action += 1
    for i in range(len(enemy_positions)):
      get_xy(i, enemy_positions)
      sense.set_pixel(x_pos, y_pos, c)
    for i in range(len(enemy_positions)):
      get_xy(i, enemy_positions)
      if z == x_pos and w == y_pos:
        col = d
        break
      else:
        col = a
    sense.set_pixel(pl_x, pl_y, b)
    sense.set_pixel(z, w, col)
    sleep(0.1)

if players == 1:
  sense.show_message("Final score of: " + str(score) + ", thanks for playing", 0.05)
  
if players == 2:
  while True:
    if player == 1:
      for event in sense.stick.get_events():
        if event.action == "pressed":
          move(event.direction, player)
          weapon(pl_x, pl_y, event.direction)
          player = 2
    elif player == 2:
      for event in sense.stick.get_events():
        if event.action == "pressed":
          move(event.direction, player)
          weapon2(pl2_x, pl2_y, event.direction)
          player = 1
    
    sense.set_pixel(pl_x, pl_y, b)
    sense.set_pixel(z, w, col)
    sense.set_pixel(pl2_x, pl2_y, c)
    sense.set_pixel(j, k, col2)
